{% extends 'layout.html.twig' %}

{% block estilos %}
    {{parent()}}
    <link rel="stylesheet" href="templates/styles/estadisticas.css">
{% endblock %}

{% block links %}
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://unpkg.com/jspdf@latest/dist/jspdf.min.js"></script>
{% endblock %}

{% block contenido %}

    <div class="graph-container" id="graph-container">
        <div>
            <ul id="listaPorgenero"> Cantidad de consultas por genero:</ul>
            <div class="graph" id="chartContainergenero"></div>
            <Button onclick="descargarPDF('listaPorgenero')">Descargar</Button>
        </div>
        <div>
            <ul id="listaPormotivo"> Cantidad de consultas por motivo:</ul>
            <div class="graph" id="chartContainermotivo"></div>
            <Button onclick="descargarPDF('listaPormotivo')">Descargar</Button>
        </div>
        <div>
            <ul id="listaPorlocalidad"> Cantidad de consultas por localidad:</ul>
            <div class="graph" id="chartContainerlocalidad"></div>     
            <Button onclick="descargarPDF('listaPorlocalidad')">Descargar</Button>
        </div>
    </div>
    
    <script>

        cargarDatos('motivo')
        cargarDatos('genero')
        cargarDatos('localidad')


        function descargarPDF(idExportable) {
            var elementHandler = {'.graph': (element, renderer) => true}
            var doc = new jsPDF()
            doc.fromHTML(document.getElementById(idExportable),15,15,{'elementHandlers':elementHandler})
            doc.save('listado.pdf')            
        }

        function cargarDatos(titulo) {
            fetch("index.php?comando=obtener-consultas-por-"+titulo).then(
                function(response){
                    response.json().then(
                        function(estadisticas){
                            estadisticas = estadisticas.map(function (estadistica) {
                                return {y:parseFloat(estadistica.cantidad), name:estadistica[titulo]}
                            })
                            estadisticas.forEach(data => {
                                elem = document.createElement("LI")
                                elem.innerHTML = data.name+': '+data.y
                                document.getElementById("listaPor"+titulo).appendChild(elem)
                            });
                            generarGrafico(estadisticas,titulo,"chartContainer"+titulo)
                        })
                }
            )
        }

        function generarGrafico(estadisticas, titulo, idContenedor){
            // Build the chart
            Highcharts.chart(idContenedor, {
                chart: {
                    plotBackgroundColor: null,
                    plotBorderWidth: null,
                    plotShadow: false,
                    type: 'pie'
                },
                title: {
                    text: 'Consultas agrupadas por '+titulo
                },
                tooltip: {
                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: false
                        },
                        showInLegend: true
                    }
                },
                series: [{
                    name: 'Estadisticas',
                    colorByPoint: true,
                    data: estadisticas
                }]
            });
        }

    </script>

{% endblock %}
